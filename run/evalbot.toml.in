# timeout in seconds for each invocation
timeout = 20

[languages.rs]
# path and arguments to binary
cmdline = ["/usr/local/lib/evalbot/run_playpen", "rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
cat <<EOF | rustc - -o ./out -C opt-level=2 -A warnings "$@" 2>&1
$(cat)
static VERSION: &'static str = "$(rustc -V | head -1 | tr -d '\n')";
EOF
exec ./out 2>&1 | sponge
''']
# string to prepend to code, optional
code_before = '''
#![feature(core_intrinsics)]
macro_rules! type_of {
    ($x:expr) => {
        {
            fn type_of<T>(x: &T) -> &'static str {
                unsafe { std::intrinsics::type_name::<T>() }
            }
            type_of(&$x)
        }
    }
}
fn show<T: std::fmt::Debug>(e: T) { println!("{:?}", e) }
fn main() {
    show({
'''
# string to append to code, optional
code_after = '''

    });
}'''

[languages.'rsx']
cmdline = ["/usr/local/lib/evalbot/run_playpen", "rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
rustc - -o ./out -C opt-level=2 -A warnings "$@" 2>&1
exec ./out 2>&1 | sponge
''']

[languages.gcc]
code_before = '''
#include <stdio.h>
'''
cmdline = ["/usr/local/lib/evalbot/run_playpen", "rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
gcc -w -x c - -O3 -o out 2>&1
exec ./out 2>&1 | sponge
''']

[languages.c]
code_before = '''
#include <stdio.h>
'''
cmdline = ["/usr/local/lib/evalbot/run_playpen", "rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
clang -w -std=c11 -x c - -O3 -o out 2>&1
exec ./out 2>&1 | sponge
''']

[languages.'gpp']
code_before = '''
#include <iostream>
'''
cmdline = ["/usr/local/lib/evalbot/run_playpen", "rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
g++ -w -x c++ - -O3 -o out 2>&1
exec ./out 2>&1 | sponge
''']

[languages.'cpp']
code_before = '''
#include <iostream>
'''
cmdline = ["/usr/local/lib/evalbot/run_playpen", "rust_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
clang++ -w -std=c++11 -x c++ - -O3 -o out 2>&1
exec ./out 2>&1 | sponge
''']

[languages.'exx']
cmdline = ["/usr/local/lib/evalbot/run_playpen", "elixir_syscalls", "{TIMEOUT}", "/usr/bin/dash", "-c", '''
set -o errexit
cat > in.ex
elixir in.ex | sponge
''']

[languages.bf]
cmdline = ["/usr/local/lib/evalbot/run_playpen", "bf_syscalls", "{TIMEOUT}", "/usr/local/lib/evalbot_in/bff4"]

[languages.'plx']
cmdline = ["/usr/local/lib/evalbot/run_playpen", "merged_syscalls", "{TIMEOUT}", "/usr/bin/perl", "-Mv5.28"]

[languages.'rbx']
cmdline = ["/usr/local/lib/evalbot/run_playpen", "merged_syscalls", "{TIMEOUT}", "/usr/bin/ruby"]

[languages.'pyx']
cmdline = ["/usr/local/lib/evalbot/run_playpen", "python_syscalls", "{TIMEOUT}", "/usr/bin/python"]

[languages.'jsx']
cmdline = ["/usr/local/lib/evalbot/run_playpen", "node_syscalls", "{TIMEOUT}", "/usr/bin/node"]

[languages.cs]
socket_addr = "/run/eval/cseval.sock"
timeout_cmdline = ["/usr/bin/sudo", "/usr/local/lib/evalbot/kill_cseval"]

[languages.py]
socket_addr = "/run/eval/pyeval.sock"
timeout_cmdline = ["/usr/bin/sudo", "/usr/local/lib/evalbot/kill_pyeval"]

[languages.ex]
socket_addr = "/run/eval/exeval.sock"
timeout_cmdline = ["/usr/bin/sudo", "/usr/local/lib/evalbot/kill_exeval"]

[languages.js]
socket_addr = "/run/eval/jseval.sock"
timeout_cmdline = ["/usr/bin/sudo", "/usr/local/lib/evalbot/kill_jseval"]

[languages.java]
socket_addr = "/run/eval/javaeval.sock"
timeout_cmdline = ["/usr/bin/sudo", "/usr/local/lib/evalbot/kill_javaeval"]
timeout = 20
